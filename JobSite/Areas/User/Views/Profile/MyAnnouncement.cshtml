@{
    ViewData["Title"] = "MyAnnouncement";
    Layout = "~/Areas/User/Views/Shared/_UserLayout.cshtml";
}

@model Users

<style>
    .cv {
        background: #C4E1F6;
        border-radius: 12px;
        padding: 20px;
    }

    .work {
        background: #C4E1F6;
        border-radius: 12px;
        padding: 20px;
    }
    .work .actions {
        display: flex;
        flex-direction: column;
        gap: 7px;
    }

    .actions a {
        padding: 8px;
        border-radius: 5px;
        background: white;
        margin-left: 10px;
        cursor: pointer;
        border: 1px solid;
        display: flex;
        gap: 5px;
        align-items: center;
    }

        .actions a:nth-child(1) {
            border-color: cornflowerblue;
            color: cornflowerblue;
        }

            .actions a:nth-child(1):hover {
                color: white;
                background: cornflowerblue;
            }

        .actions a:nth-child(2) {
            border-color: green;
            color: green;
        }

            .actions a:nth-child(2):hover {
                color: white;
                background: green;
            }

        .actions a:nth-child(3) {
            border-color: palevioletred;
            color: palevioletred;
        }

            .actions a:nth-child(3):hover {
                color: white;
                background: palevioletred;
            }

    .someDetails {
        margin-top:35px;
        display: flex;
        align-items: center;
        gap: 20px;
    }
    .someDetails p {
        padding: 8px;
        border-radius:5px;
        background: white;
        color: #333;
    }
</style>

@if (TempData["createdSuccessfully"] != null)
{
    <script>
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            customClass: {
                title: 'custom-toast-title'
            },
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        });

        Toast.fire({
            icon: 'success',
            title: '@TempData["createdSuccessfully"]'
        });
    </script>
}

@if (TempData["updatedSuccessfully"] != null)
{
    <script>
        const Toast = Swal.mixin({
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000,
            timerProgressBar: true,
            customClass: {
                title: 'custom-toast-title'
            },
            didOpen: (toast) => {
                toast.addEventListener('mouseenter', Swal.stopTimer)
                toast.addEventListener('mouseleave', Swal.resumeTimer)
            }
        });

        Toast.fire({
            icon: 'success',
            title: '@TempData["updatedSuccessfully"]'
        });
    </script>
}

<h2>Elanlarım</h2>
<br />

@if (Model.Candidates.Count > 0)
{
    <h3 style="border-left: 6px solid #6495ED; padding-left:5px">CV-lər</h3>
    <br />
    foreach (var c in Model.Candidates)
    {
        <div class="cv" id="item-@c.Id">
            <div class="d-flex justify-content-between align-items-center">
                <div class="d-flex align-items-center" style="gap:25px">
                    <img width="90" height="90" src="@c.Image" alt="userImage" style="border-radius:50%; object-fit: cover;" />
                    <div>
                        <h3>@c.Position</h3>
                        <h5>@c.Firstname @c.Lastname @c.Patronymic</h5>
                        <h6>Son tarix: @c.EndDate</h6>
                    </div>
                </div>
                <div class="actions d-flex">
                    <a asp-area="" asp-controller="Candidates" asp-action="Details" asp-route-id="@c.Id">
                        <i class="fa-regular fa-eye"></i>
                        <span>Elana bax</span>
                    </a>
                    <a asp-area="User" asp-controller="Profile" asp-action="UpdateCV" asp-route-id="@c.Id">
                        <i class="fa-regular fa-pen-to-square"></i>
                        <span>Düzəliş et</span>
                    </a>
                    <a onclick ="deleteItem(@c.Id)">
                        <i class="fa-solid fa-trash"></i>
                        <span>Sil</span>
                    </a>
                </div>
            </div>
        </div>
        <br />
    }
}
<br />
@if (Model.Works.Count > 0)
{
    <h3 style="border-left: 6px solid #6495ED; padding-left:5px">İş elanları</h3>
    <br />
    foreach (var c in Model.Works)
    {
        <div class="work">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <div class="d-flex align-items-center" style="gap:25px">
                        <div>
                            <h3>@c.Position</h3>
                            <h6>Son tarix: @c.EndDate</h6>
                        </div>
                    </div>
                    <div class="someDetails">
                        <p>
                            <i class="fa-solid fa-money-bill"></i>
                            @if (c.IsNegotiable)
                            {
                                <span>Razılaşma yolu ilə</span>
                            }
                            else
                            {
                                <span>@c.Salary</span>
                            }
                        </p>
                        <p>
                            <i class="fa-solid fa-graduation-cap"></i>
                            <span>@c.Education</span>
                        </p>
                        <p>
                            <i class="fa-solid fa-hourglass-start"></i>
                            <span>@c.ModeOfWork</span>
                        </p>
                        <p>
                            <i class="fa-solid fa-business-time"></i>
                            <span>@c.WorkExperience</span>
                        </p>
                    </div>
                </div>
                <div class="actions d-flex">
                    <a asp-area="" asp-controller="Jobs" asp-action="JobDetails" asp-route-id="@c.Id">
                        <i class="fa-regular fa-eye"></i>
                        <span>Elana bax</span>
                    </a>
                    <a>
                        <i class="fa-regular fa-pen-to-square"></i>
                        <span>Düzəliş et</span>
                    </a>
                    <a >
                        <i class="fa-solid fa-trash"></i>
                        <span>Sil</span>
                    </a>
                </div>
            </div>
        </div>
        <br />
    }
}

<script>
    function deleteItem(id) {
        Swal.fire({
            title: 'Silmək üçün əminsiniz?',
            text: "Bu işləmi geri ala bilmərsiniz!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Bəli',
            cancelButtonText: 'Ləğv et'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/User/Profile/DeleteAnnouncement',
                    type: 'DELETE',
                    data: { id: id },
                    success: function (response) {
                        $("#item-" + id).remove();
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            customClass: {
                                title: 'custom-toast-title'
                            },
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        });

                        Toast.fire({
                            icon: 'success',
                            title: response.message
                        });

                    },
                    error: function () {
                        const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            customClass: {
                                title: 'custom-toast-title'
                            },
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        });

                        Toast.fire({
                            icon: 'warning',
                            title: 'Silinərkən xəta baş verdi'
                        });
                    }
                });
            }
        });
    }
</script>